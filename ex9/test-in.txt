(define-class <btree> <object> label left right)

(define-method btree->list ((btree <btree>))
  (cons (label btree) 
        (cons (btree->list (left btree))
              (cons (btree->list (right btree))
                    nil))))

(define-method btree->list (obj) 'NULL)

(define BT (make <btree> (label 'a)
                 (left (make <btree> (label 'b)
                             (left nil)
                             (right nil)))
                 (right (make <btree> (label 'c)
                              (left (make <btree> (label 'd)
                                          (left (make <btree> (label 'e)
                                                      (left nil)
                                                      (right (make <btree> (label 'f)
                                                                   (left nil)
                                                                   (right nil)))))
                                          (right (make <btree> (label 'g)
                                                       (left nil)
                                                       (right nil)))))
                              (right (make <btree> (label 'h)
                                           (left (make <btree> (label 'i)
                                                       (left nil)
                                                       (right nil)))
                                           (right nil)))))))

(btree->list BT)